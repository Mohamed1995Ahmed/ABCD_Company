@model EmployeePagedViewModel

<div class="card shadow-sm mb-4 border-0">
    <div class="card-body d-flex flex-wrap gap-3 align-items-center bg-light rounded-3">
        <i class="bi bi-search fs-4 text-info me-2"></i>
        <input type="text" id="searchInput" name="keyword" value="@Model.Keyword"
               class="form-control form-control-lg flex-grow-1 border-0 border-bottom shadow-none"
               placeholder="Search employees by name or job title..." />
    </div>
</div>


    <!-- Employee Table -->
    <div id="employeeTable">
        <partial name="_EmployeeTablePartial" model="Model" />
    </div>

    <!-- Pagination Section -->
    @if (Model.TotalPages > 1)
    {
        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                @* <ul class="pagination"> *@


                @*     <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")"> *@
                @*         <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })" tabindex="-1">« Previous</a> *@
                @*     </li> *@

                @*     <!-- Page Numbers --> *@
                @*     @for (int i = 1; i <= Model.TotalPages; i++) *@
                @*     { *@
                @*         <li class="page-item @(i == Model.CurrentPage ? "active" : "")"> *@
                @*             <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a> *@
                @*         </li> *@
                @*     } *@

                @*     <!-- Next Button --> *@
                @*     <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")"> *@
                @*         <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">Next »</a> *@
                @*     </li> *@
                  

                   
                   
                @* </ul> *@
            </nav>
        </div>
    }
</div>

<!-- Scripts -->
@section Scripts {
    <script>
        function loadContent(url) {
            $.get(url, function (data) {
                const html = $('<div>').html(data);
                const newContent = html.find('#employeeTable').html();
                $('#employeeTable').html(newContent);
            });
        }

        $(document).ready(function () {
            let debounceTimer;

            // Live Debounced Search
            $('#searchInput').on('keyup', function () {
                clearTimeout(debounceTimer);
                const keyword = $(this).val();
                debounceTimer = setTimeout(() => {
                    const url = '@Url.Action("Index", "Employee")' + '?keyword=' + encodeURIComponent(keyword);
                    loadContent(url);
                }, 300);
            });

            // AJAX Pagination
            $(document).on('click', '.pagination a.page-link', function (e) {
                e.preventDefault();
                const url = $(this).attr('href');
                loadContent(url);
            });
        });
    </script>
}

<style>
    #searchInput::placeholder {
        color: #6c757d;
        font-style: italic;
    }

    .card {
        border-radius: 1rem;
    }

    .table td, .table th {
        vertical-align: middle;
        text-align: center;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        list-style: none;
        padding-left: 0;
    }

        .pagination .page-link {
            color: #0d6efd;
            border-radius: 0.5rem;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
            color: #fff;
        }

        .pagination .page-item.disabled .page-link {
            color: #6c757d;
        }

    .page-item {
        margin: 0 5px;
    }

        .page-item a {
            display: block;
            padding: 10px 15px;
        }

    .bi {
        font-size: 1.2rem;
    }

    .card {
        border-radius: 1rem;
        background-color: #f8f9fa; /* Soft background color for the card */
    }

    .card-body {
        background-color: #ffffff; /* White background for card body */
        border-radius: 1rem; /* Rounded corners for card body */
        padding: 1.5rem; /* Padding for the card content */
    }

        .card-body .form-control {
            font-size: 1.1rem; /* Slightly larger text for the search input */
            border-radius: 0.5rem;
        }

            .card-body .form-control:focus {
                border-color: #17a2b8; /* Blue border on focus */
                box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.25); /* Soft shadow for focus effect */
            }

            .card-body .form-control::placeholder {
                color: #6c757d; /* Placeholder text color */
                font-style: italic; /* Italicize placeholder text */
            }

        .card-body i {
            font-size: 1.5rem; /* Larger icon for better visibility */
            color: #17a2b8; /* Light blue color for the search icon */
        }

        .card-body .form-control:focus + i {
            color: #17a2b8; /* Change icon color when input is focused */
        }

    .bg-light {
        background-color: #f1f5f8 !important; /* Light background for the whole card */
    }

    .card-body .form-control:focus {
        border-color: #5e72e4;
        box-shadow: 0 0 0 0.2rem rgba(94, 114, 228, 0.25); /* Blue glow on focus */
    }

    .card-body .form-control:hover {
        border-color: #5e72e4; /* Light blue on hover */
    }

    .card-body .form-control::placeholder {
        color: #adb5bd; /* Light grey placeholder */
    }

</style>

